-- Script was generated by Devart dbForge Schema Compare for SQL Server, Version 1.10.265.0
-- Script date 10/5/2019 11:50:15 AM
-- Source server version: 10.50.1600
-- Source connection string: Data Source=(local);Integrated Security=False;User ID=sa;
-- Target server version: 10.50.1600
-- Target connection string: Data Source=(local);Integrated Security=False;User ID=sa;
-- Run this script on DBPOS1 to make it the same as DBPOS
-- Please backup your target database before running this script
SET CONCAT_NULL_YIELDS_NULL, ANSI_NULLS, ANSI_PADDING, QUOTED_IDENTIFIER, ANSI_WARNINGS, ARITHABORT ON
SET NUMERIC_ROUNDABORT, IMPLICIT_TRANSACTIONS, XACT_ABORT OFF
GO

USE DBPOS
GO

--
-- Drop column AtasNama
--
ALTER TABLE dbo.MJual
  DROP COLUMN AtasNama
GO

--
-- Drop procedure dbo.spSimpanMJual
--
DROP PROCEDURE dbo.spSimpanMJual
GO

--
-- Create procedure dbo.spSimpanMJual
--
GO

CREATE PROCEDURE dbo.spSimpanMJual (
	@NoID BIGINT
	,@Kode VARCHAR(255)
	,@NoReff VARCHAR(255)
	,@IDCustomer INT
	,@Tanggal DATETIME
	,@JatuhTempo DATE
	,@Catatan VARCHAR(MAX)
	,@IDTypePajak SMALLINT
	,@Subtotal MONEY
	,@DiscNotaProsen NUMERIC(18, 2)
	,@DiscNotaRp MONEY
	,@TotalBruto MONEY
	,@DPP MONEY
	,@PPN MONEY
	,@Total MONEY
	,@Sisa MONEY
	,@IsPosted BIT
	,@TglPosted DATETIME
	,@IDUserPosted INT
	,@IDUserEntry INT
	,@IDUserEdit INT
	,@IDGudang INT
	)
AS
BEGIN
	DECLARE @NoUrut AS INT = 0

	IF (@NoID <= 0)
	BEGIN
		SELECT @NoID = MAX(NoID)
		FROM MJual

		SET @NoID = ISNULL(@NoID, 0) + 1
		SET @Kode = 'JL/' + SUBSTRING(CONVERT(VARCHAR(100), @Tanggal, 112), 3, 4) + '/'

		SELECT @NoUrut = MAX(CASE 
					WHEN ISNUMERIC(RIGHT(Kode, 5)) = 1
						THEN RIGHT(Kode, 5)
					ELSE 0
					END)
		FROM MJual
		WHERE LEFT(Kode, LEN(@Kode)) = @Kode

		SET @NoUrut = ISNULL(@NoUrut, 0) + 1
		SET @Kode = @Kode + LEFT('00000', 5 - LEN(CONVERT(VARCHAR(10), @NoUrut))) + CONVERT(VARCHAR(10), @NoUrut)

		INSERT INTO [MJual] (
			NoID
			,Kode
			,NoReff
			,IDCustomer
			,Tanggal
			,JatuhTempo
			,Catatan
			,IDTypePajak
			,Subtotal
			,DiscNotaProsen
			,DiscNotaRp
			,TotalBruto
			,DPP
			,PPN
			,Total
			,Bayar
			,Sisa
			,IsPosted
			,TglPosted
			,IDUserPosted
			,IDUserEntry
			,IDUserEdit
			,IDGudang
			)
		SELECT @NoID
			,@Kode
			,@NoReff
			,@IDCustomer
			,@Tanggal
			,@JatuhTempo
			,@Catatan
			,@IDTypePajak
			,@Subtotal
			,@DiscNotaProsen
			,@DiscNotaRp
			,@TotalBruto
			,@DPP
			,@PPN
			,@Total
			,@Total-@Sisa
			,@Sisa
			,@IsPosted
			,@TglPosted
			,@IDUserPosted
			,@IDUserEntry
			,@IDUserEdit
			,@IDGudang
	END
	ELSE
	BEGIN
		UPDATE [MJual]
		SET NoID = @NoID
			,Kode = @Kode
			,NoReff = @NoReff
			,IDCustomer = @IDCustomer
			,Tanggal = @Tanggal
			,JatuhTempo = @JatuhTempo
			,Catatan = @Catatan
			,IDTypePajak = @IDTypePajak
			,Subtotal = @Subtotal
			,DiscNotaProsen = @DiscNotaProsen
			,DiscNotaRp = @DiscNotaRp
			,TotalBruto = @TotalBruto
			,DPP = @DPP
			,PPN = @PPN
			,Total = @Total
			,Bayar = @Total-@Sisa
			,Sisa = @Sisa
			,IsPosted = @IsPosted
			,TglPosted = @TglPosted
			,IDUserPosted = @IDUserPosted
			,IDUserEntry = @IDUserEntry
			,IDUserEdit = @IDUserEdit
			,IDGudang = @IDGudang
		WHERE NoID = @NoID
	END

	SELECT @NoID AS NoID
END
GO

--
-- Create function dbo.fnSplitString
--
GO
CREATE FUNCTION dbo.fnSplitString (
	@List NVARCHAR(MAX)
	,@Delim VARCHAR(255)
	)
RETURNS TABLE
AS
RETURN (
		SELECT [Value]
		FROM (
			SELECT [Value] = LTRIM(RTRIM(SUBSTRING(@List, [Number], CHARINDEX(@Delim, @List + @Delim, [Number]) - [Number])))
			FROM (
				SELECT Number = ROW_NUMBER() OVER (
						ORDER BY name
						)
				FROM sys.all_objects
				) AS x
			WHERE Number <= LEN(@List)
				AND SUBSTRING(@Delim + @List, [Number], LEN(@Delim)) = @Delim
			) AS y
		)
GO

--
-- Create procedure dbo.spLapKartuStok
--
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE dbo.spLapKartuStok
	-- Add the parameters for the stored procedure here
	@TglDari AS DATE
	,@TglSampai AS DATE
	,@IDBarang AS BIGINT
	,@IDGudang AS VARCHAR(250)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	DECLARE @Temp AS TABLE (
		PKID INT IDENTITY(1, 1) PRIMARY KEY
		,IDJenisTransaksi INT
		,IDTransaksi BIGINT
		,IDKartuStok INT
		,SaldoAwal FLOAT
		,SaldoAkhir FLOAT
		,NilaiAwal FLOAT
		,NilaiAkhir FLOAT
		)
	DECLARE @i AS INT
		,@iMax AS INT
		,@SaldoAwal FLOAT
		,@SaldoAkhir FLOAT
		,@NilaiAwal FLOAT
		,@NilaiAkhir FLOAT
	DECLARE @QtyMasuk FLOAT
		,@QtyKeluar FLOAT
		,@Debet FLOAT
		,@Kredit FLOAT

	INSERT INTO @Temp (
		IDJenisTransaksi
		,IDTransaksi
		,IDKartuStok
		,SaldoAwal
		,SaldoAkhir
		,NilaiAwal
		,NilaiAkhir
		)
	SELECT 1
		,- 999
		,- 999
		,SUM((QtyMasuk - QtyKeluar) * Konversi)
		,SUM((QtyMasuk - QtyKeluar) * Konversi)
		,SUM(Debet - Kredit)
		,SUM(Debet - Kredit)
	FROM MKartuStok(NOLOCK)
	WHERE MKartuStok.IDBarang = @IDBarang
		AND IDGudang IN (SELECT * FROM dbo.fnSplitString(REPLACE(@IDGudang, ' ', ''), ','))
		AND CONVERT(DATE, MKartuStok.Tanggal) < CONVERT(DATE, @TglDari)

	INSERT INTO @Temp (
		IDJenisTransaksi
		,IDTransaksi
		,IDKartuStok
		,SaldoAwal
		,SaldoAkhir
		,NilaiAwal
		,NilaiAkhir
		)
	SELECT MKartuStok.IDJenisTransaksi
		,MKartuStok.IDTransaksi
		,MKartuStok.NoID
		,0
		,0
		,0
		,0
	FROM MKartuStok(NOLOCK)
	WHERE MKartuStok.IDBarang = @IDBarang
		AND IDGudang IN (SELECT * FROM dbo.fnSplitString(REPLACE(@IDGudang, ' ', ''), ','))
		AND CONVERT(DATE, MKartuStok.Tanggal) >= CONVERT(DATE, @TglDari)
		AND CONVERT(DATE, MKartuStok.Tanggal) <= CONVERT(DATE, @TglSampai)

	SELECT @i = 1
		,@iMax = MAX(PKID)
	FROM @Temp T

	WHILE (@i <= @iMax)
	BEGIN
		SELECT @SaldoAwal = CASE 
				WHEN @i = 1
					THEN ISNULL(T.SaldoAwal, 0)
				ELSE @SaldoAwal
				END
			,
			--@SaldoAkhir = T.SaldoAkhir,
			@NilaiAwal = CASE 
				WHEN @i = 1
					THEN ISNULL(T.NilaiAwal, 0)
				ELSE @NilaiAwal
				END
			,
			--@NilaiAkhir = T.NilaiAkhir,
			@QtyMasuk = B.QtyMasuk * B.Konversi
			,@QtyKeluar = B.QtyKeluar * B.Konversi
			,@Debet = B.Debet
			,@Kredit = B.Kredit
		FROM @Temp T
		LEFT JOIN MKartuStok(NOLOCK) B ON T.IDKartuStok = B.NoID
		WHERE T.PKID = @i

		SET @SaldoAkhir = ISNULL(@SaldoAwal, 0) + ISNULL(@QtyMasuk, 0) - ISNULL(@QtyKeluar, 0)
		SET @NilaiAkhir = ISNULL(@NilaiAwal, 0) + ISNULL(@Debet, 0) - ISNULL(@Kredit, 0)

		UPDATE T
		SET SaldoAkhir = @SaldoAkhir
			,NilaiAkhir = @NilaiAkhir
			,SaldoAwal = @SaldoAwal
			,NilaiAwal = @NilaiAwal
		FROM @Temp T
		WHERE T.PKID = @i

		SET @SaldoAwal = @SaldoAkhir
		SET @NilaiAwal = @NilaiAkhir
		SET @i = @i + 1
	END

	SELECT K.[NoID]
		,K.[IDBarang]
		,K.[IDBarangD]
		,K.[Varian]
		,K.[IDJenisTransaksi]
		,K.[IDTransaksi]
		,K.[IDTransaksiD]
		,K.[IDGudang]
		,K.[Tanggal]
		,T.SaldoAwal
		,K.[QtyMasuk] * K.Konversi AS QtyMasuk
		,K.[QtyKeluar] * K.Konversi AS QtyKeluar
		,T.SaldoAkhir
		,T.NilaiAwal
		,K.[Debet]
		,K.[Kredit]
		,T.NilaiAkhir
		,K.[HargaBeli]
		,K.[HPP]
		,B.Barcode
		,A.Kode AS KodeBarang
		,A.Nama AS NamaBarang
		,C.Kode AS Satuan
		,D.Nama AS JenisTransaksi
		,E.Nama AS Gudang
	FROM @Temp T
	LEFT JOIN MKartuStok K(NOLOCK) ON K.NoID = T.IDKartuStok
	LEFT JOIN MBarang A(NOLOCK) ON A.NoID = K.IDBarang
	LEFT JOIN MBarangD B(NOLOCK) ON B.NoID = K.IDBarangD
	LEFT JOIN MSatuan C(NOLOCK) ON C.NoID = K.IDSatuan
	LEFT JOIN MJenisTransaksi D(NOLOCK) ON D.ID = T.IDJenisTransaksi
	LEFT JOIN MGudang E(NOLOCK) ON E.NoID = K.IDGudang
END
GO

